
pandas
-------

-series
-dataframe

various different operations can be performed using pandas
- importing data
- exporting data
- create test objects
- viewing data
- selecting data
- data cleaning
- filtering/sorting
- statistics


-importing data
----------------
import pandas as pd
pd.read_csv(filename)
pd.read_excel(filename)
pd.read_sql(query,connectionobject)
pd.read_json(jsonstring)
pd.read_html(url)
pd.read_clipboard()


-exporting data
---------------
df.to_csv(filename)
df.to_excel(filename)
df.to_json(filename)
df.to_html(filename)
df.to_clipboard()


-create test objects
-------------------
pd.DataFrame(np.random.rand(20,5))   # 5 columns with 10 rows
pd.Series(mylist)


-viewing/inspecting data
------------------------
df.head(n)
df.tail(n)
df.shape()
df.info()
df.describe()
s.value_counts(dropna=False)


-selecting
----------
df[col]
df[[col1,col2]]
s.iloc[0]        selection by position
s.loc[0]         selection by index
df.iloc[0,:]     first row
df.iloc[0,0]     first element of first column


-data cleaning
---------------
df.columns = ['a','b','c']
pd.isnull()
df.dropna()
df.dropna(axis=1)      drop all columns that contains null vlaues

df.fillna(x)
s.fillna(x)
s.replace([1,3],['one','three'])
s.rename(columns= lambda x: x + 1 )


-filter sort and groupby
------------------------

df[df[col] > 0.5]
df[(df[col] > 0.5) & ( df[col] < 0.7)]

df[ df["city"] == "SACRAMANTO"  & df["price"]  > 100000] ]

df.sort_values("price")




-statistics
--------------
df.describe()
df.mean()
df.corr()
df.count() 
df.max()
df.min()
df.median()
df.std()








